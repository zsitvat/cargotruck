@page "/Tasks/edit/{Id:int}"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js

<Form ButtonText="Update" tasks="@task" OnValidSubmit="@EditTasks" TitleText="Edit_task" checkValidSubmit="@CheckValidSubmit" />

@code {
    [Parameter] public int Id { get; set; }
    bool isValidSubmit = true;
    TasksDto? task = new TasksDto();

    protected async override Task OnParametersSetAsync()
    {
        task = await http.GetFromJsonAsync<TasksDto>($"api/tasks/getById/{Id}");
    }

    async Task EditTasks()
    {
        if (isValidSubmit)
        {
            var text = @localizer["Succesfull_update"];
            await http.PutAsJsonAsync("api/tasks/put", task);
            await js.InvokeVoidAsync("alert", $"{text}");
            uriHelper.NavigateTo("/Tasks");
        }
    }

    protected override void OnInitialized()
    {
        PageHistoryState.AddPageToHistory("/Tasks/edit/{Id:int}");
        base.OnInitialized();
    }

    public void CheckValidSubmit(bool valid)
    {
        isValidSubmit = valid;
    }
}