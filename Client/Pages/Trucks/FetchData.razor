@page "/Trucks"


<h3>@localizer["Trucks"]</h3>
<div class="form-group buttons">
    
    <a class="btn btn-success me-4" href="/Trucks/create"><i class="oi oi-plus"></i> @localizer["Add"]</a>
    <a data-title="@localizer["Settings"]" class="btn btn-light" @onclick="@(() => settings=!settings)"><i class="oi oi-cog"></i></a>

    <li class="d-inline-block" data-title="@localizer["export"]" @onclick="() => expandExportMenu = !expandExportMenu">
        <div class="btn btn-light d-inline-block">
            <span class="icon iconify export-icon" data-icon="oi:data-transfer-download" style="margin:0;"></span>
        </div>
        @if (expandExportMenu)
        {
            <ul class="nav flex-column export-buttons">
                <button data-title="@localizer["excel"]" class="btn" @onclick="@(() =>fileDownload.ExportAsync("Trucks","xlsx",dateFilter, client, js))"><span class="icon iconify" data-icon="file-icons:microsoft-excel" />XLSX</button>
                <button data-title="@localizer["pdf"]" class="btn" @onclick="@(() =>fileDownload.ExportAsync("Trucks","pdf",dateFilter, client, js))"><span class="icon iconify" data-icon="bi:filetype-pdf" />PDF</button>
                <button data-title="@localizer["txt"]" class="btn" @onclick="@(() =>fileDownload.ExportAsync("Trucks","txt",dateFilter, client, js))"><span class="icon iconify" data-icon="bi:filetype-txt" />TXT</button>
                <button data-title="@localizer["csv"]" class="btn" @onclick="@(() =>fileDownload.ExportAsync("Trucks","csv",dateFilter, client, js))"><span class="icon iconify" data-icon="bi:filetype-csv" />CSV</button>
            </ul>
        }
    </li>

    <span class="file-upload-title" import-data-title="@localizer["File_input"]"><UploadFiles Page="trucks" StateChanged="StateChanged" /></span>
    <input value="@searchString" @oninput="@SearchAsync" placeholder="@(searchString != "" ? searchString : localizer["Search"])" class="form-control inputs input_search" type="search" id="search-input" name="SearchString">
    
    <!--Filter icon-->
    @if (filter == Status.loaned || filter == Status.on_road || filter == Status.under_repair || filter == Status.rented || filter == Status.delivering || filter == Status.garage)
    {
        <button @onclick="@(()=>OnChangeResetFilter())" class="filter-button"><span class="icon iconify filter-icon" data-icon="material-symbols:filter-alt-off"></span></button>
    }
    else
    {
        <button @onclick="@(()=>OnChangeResetFilter())" class="filter-button not-pointer"><span class="icon iconify filter-icon not-pointer" data-icon="material-symbols:filter-alt"></span></button>
    }
    <!--Filter-->
    <div data-title="@localizer["Filter"]" class="form-group custom-select d-inline-block">
        <div class="form-control filter">@(filter != null && filter.ToString() != "" ? localizer[filter?.ToString()!] : localizer["Nothing"])</div>
        <div class="custom-select-options ">
            <div class="custom-select-option" @onclick='() => {filter = null;StateChanged(); }'>
                @localizer["Nothing"]
            </div>
            @foreach (var value in Enum.GetValues<Status>())
            {
                <div class="custom-select-option" @onclick='() => {filter = value;StateChanged(); }'>
                    @localizer[value.ToString()]
                </div>
            }
        </div>
    </div>

    <!--Date Filter-->
    <div class="date-filter" data-title="@localizer["date-filter-info"]">
        <div class="date-filter-icon-div d-inline-block"><span class="icon iconify date-filter-icon" data-icon="carbon:arrows-vertical" /></div>
        <Input class="form-control" style="border-bottom-right-radius:unset;border-bottom:unset;" type="datetime-local" value="@dateFilter?.StartDate.GetValueOrDefault().ToString("yyyy-MM-ddTHH:mm", CultureInfo.CurrentCulture)" @oninput="@((e)=>{DateStartInput(e);})">
        <Input class="form-control" style="border-top-right-radius:unset;border-top:unset;" type="datetime-local" value="@dateFilter?.EndDate.GetValueOrDefault().ToString("yyyy-MM-ddTHH:mm", CultureInfo.CurrentCulture)" @oninput="@((e)=>{DateEndInput(e);})">
    </div>

</div>
<br>

@if (fileDownload.DocumentError != null && fileDownload.DocumentError != "")
{
    <p class="error">@fileDownload.DocumentError</p>
}

@if (Trucks == null)
{
    <text><p class="text">@localizer["Loading"]</p></text>
}
else if (Trucks.Length == 0)
{
    <text><p class="text">@localizer["No_records"]</p></text>
}
else
{
    <div class="col-md-8 stretch-card mb-2 me-3">
        <div class="form-card mb-1 table-width">
            <div class="card-body mb-3">
                <div class="table-responsive fixed-table-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>#</th>
                                @if (showColumns[0])
                                {
                                    <th><button class="@(sortOrder=="Vehicle_registration_number" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Vehicle_registration_number"))">@localizer["Vehicle_registration_number"]</button></th>
                                }
                                @if (showColumns[1])
                                {
                                    <th><button class="@(sortOrder=="Brand" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Brand"))">@localizer["Brand"]</button></th>
                                }
                                @if (showColumns[2])
                                {
                                    <th><button class="@(sortOrder=="Status" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Status"))">@localizer["Status"]</button></th>
                                }
                                @if (showColumns[3])
                                {
                                    <th><button class="@(sortOrder=="Road_id" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Road_id"))">@localizer["Road_id"]</button></th>
                                }
                                @if (showColumns[4])
                                {
                                    <th><button class="@(sortOrder=="Max_weight" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Max_weight"))">@localizer["Max_weight"]</button></th>
                                }
                                @if (showColumns[5])
                                {
                                    <th class="last-col"><button class="@(sortOrder=="Date" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Date"))">@localizer["Date"]</button></th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            
                            @foreach (Trucks item in Trucks)
                            {

                                <tr @onclick="@((e) =>MouseHoverClass.MouseOnclick(item.Id.ToString()))" @onmouseover="@((e) =>MouseHoverClass.MouseOver(item.Id.ToString()))" @onmouseout="@((e) =>MouseHoverClass.MouseOut())"
                            class="@(MouseHoverClass.MouseOnHoverClass == item.Id.ToString() || MouseHoverClass.MouseOnclickClass == item.Id.ToString() ? "color-on-hover" :"")">
                                    <td>@item.Id</td>
                                  
                                    @if (showColumns[0])
                                    {
                                        <td>@item.Vehicle_registration_number</td>
                                    }
                                    @if (showColumns[1])
                                    {
                                        <td> @item.Brand </td>
                                    }
                                    @if (showColumns[2])
                                    {
                                        <td>@localizer[item.Status.ToString()]</td>
                                    }
                                    @if (showColumns[3])
                                    {
                                        <td>
                                            @if (item.Road_id != null)
                                            {
                                                <button class="no-button" @onclick="@(()=>GetById(item.Road_id,"road"))">@item.Road_id <span class="icon iconify" data-icon="material-symbols:read-more-rounded"></span></button>
                                            }
                                        </td>
                                    }
                                    @if (showColumns[4])
                                    {
                                        <td>@item.Max_weight</td>
                                    }
                                    @if (showColumns[5])
                                    {
                                        <td>@item.Date</td>
                                    }
                                    <td class="@(MouseHoverClass.MouseOnHoverClass == item.Id.ToString() || MouseHoverClass.MouseOnclickClass == item.Id.ToString() ? "show" :"not-show") ">
                                        <a class="btn  fixed" href="Trucks/edit/@item.Id"> <span data-title="@localizer["Edit"]" class="oi oi-pencil" aria-hidden="true"></span></a>
                                        <button class="btn fixed2" @onclick="@(() => DeleteAsync(item.Id))"> <span data-title="@localizer["DeleteAsync"]" class="oi oi-trash" aria-hidden="true"></span></button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
               <Pagination CurrentPage="currentPage" PageSize="pageSize" DataRows="dataRows" MaxPage="maxPage" GetCurrentPage="GetCurrentPageAsync" />
            </div>
        </div>
    </div>


    <div class="hideandshow-cards">
        @if (settings)
        {
            <Settings OnSettingsClosed="SettingsClosed" OnInputChanged="InputChanged" OnSettingsChanged="SettingsChanged" showColumns="@showColumns" settings="@settings" pageSize="@pageSize" />
        }
        @if (IdForGetById != null)
        {
            <GetByIdComponent GetById="@IdForGetById.ToString()" GetByIdType="@GetByIdType" OnSetToNull="SetToNull" />
        }
    </div>
}
