<div class="col-md-6 stretch-card d-inline-block ">
    <div class="card ps-2">
        <div class="card-body">
            <h1 class="h4 font-weight-normal login-title align-center">
                @localizer["Change_password"]
            </h1>
            <EditForm class="profile-form" OnValidSubmit="OnSubmitpwd" Model="changePassword">
                <DataAnnotationsValidator />

                <label for="inputPassword" class="input-only">@localizer["Password"]</label>
                <InputText type="password" id="inputPassword" class="form-control" @bind-Value="@changePassword.Password" />
                <ValidationMessage For="@(() => changePassword.Password)" />

                <label for="inputPasswordCurrent" class="input-only">@localizer["Password_current"]</label>
                <InputText type="password" id="inputPassword_current" class="form-control" @bind-Value="@changePassword.PasswordCurrent" />
                <ValidationMessage For="@(() => changePassword.PasswordCurrent)" />

                <div class="container">
                    <div class="col-md-12 text-center">
                        <button class="btn btn-primary btn-block mt-4  center-button" type="submit">@localizer["Edit"]</button>
                    </div>
                </div>
                <label class="text-danger">@errorpwd</label>
            </EditForm>
        </div>
    </div>
</div>

@code {
    @functions {

        ChangePasswordRequest changePassword { get; set; } = new ChangePasswordRequest();
        string errorpwd { get; set; }

        async Task OnSubmitpwd()
        {
            errorpwd = null;
            try
            {
                await authStateProvider.ChangePassword(changePassword);
                navigationManager.NavigateTo("/Profile", true);
            }
            catch (Exception ex)
            {
                errorpwd = ex.Message;
            }
        }
    }
}
