@page "/Warehouses/edit/{Id:int}"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js


<Form ButtonText="Update" warehouses="@warehouse" OnValidSubmit="@EditWarehouseAsync" TitleText="Edit_warehouse"/>

@code {
    [Parameter] public int Id { get; set; }
    WarehouseDto? warehouse = new WarehouseDto();

    protected async override System.Threading.Tasks.Task OnParametersSetAsync()
    {
        warehouse = await http.GetFromJsonAsync<WarehouseDto>($"api/warehouses/getById/{Id}");
    }

    async System.Threading.Tasks.Task EditWarehouseAsync()
    {
        if (warehouse != null)
        {
            warehouse.User_id = authStateProvider.GetCurrentUserAsync().Result.Id;
        }
        var text = @localizer["Succesfull_update"];
        await http.PutAsJsonAsync("api/warehouses/put", warehouse);
        await js.InvokeVoidAsync("alert", $"{text}");
        uriHelper.NavigateTo("/Warehouses");
    }

    protected override void OnInitialized()
    {
        PageHistoryState.AddPageToHistory("/Warehouses/edit/{Id:int}");
        base.OnInitialized();
    }
}