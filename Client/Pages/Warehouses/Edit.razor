@page "/Warehouses/edit/{Id:int}"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js


<Form ButtonText="Update" warehouses="@warehouse" OnValidSubmit="@EditWarehouseAsync" TitleText="Edit_warehouse"/>

@if (window)
{
    <SavedWindow OnClose="CloseWindow" />
}

@code {
    [Parameter] public int Id { get; set; }
    WarehouseDto? warehouse = new WarehouseDto();
    bool window = false;

    protected async override Task OnParametersSetAsync()
    {
        warehouse = await http.GetFromJsonAsync<WarehouseDto>($"api/warehouses/getById/{Id}");
    }

    async Task EditWarehouseAsync()
    {
        if (warehouse != null)
        {
            warehouse.UserId = authStateProvider.GetCurrentUserAsync().Result.Id;
        }
        var IsSaved = await http.PutAsJsonAsync("api/warehouses/put", warehouse);
        if (IsSaved.IsSuccessStatusCode)
        {
            window = true;
        }
    }

    public void CloseWindow()
    {
        window = false;
        uriHelper.NavigateTo("/Warehouses");
    }

    protected override void OnInitialized()
    {
        PageHistoryState.AddPageToHistory("/Warehouses/edit/{Id:int}");
        base.OnInitialized();
    }
}