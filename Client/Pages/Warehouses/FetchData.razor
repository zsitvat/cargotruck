@page "/Warehouses"
@using Cargotruck.Client.Components

<h3>@localizer["Warehouses"]</h3>
<div class="form-group buttons">
    
    <a class="btn btn-success me-4" href="/Warehouses/create"><i class="oi oi-plus"></i> @localizer["Add"]</a>
    <a data-title="@localizer["Settings"]" class="btn btn-light" @onclick="@(() => settings=!settings)"><i class="oi oi-cog"></i></a>

    <li class="d-inline-block" data-title="@localizer["export"]" @onclick="() => expandExportMenu = !expandExportMenu">
        <div class="btn btn-light d-inline-block">
            <span class="icon iconify export-icon" data-icon="oi:data-transfer-download" style="margin:0;"></span>
        </div>
        @if (expandExportMenu)
        {
            <ul class="nav flex-column export-buttons">
                <button data-title="@localizer["excel"]" class="btn" @onclick="@(() =>FileDownload.ExportAsync("Warehouses","xlsx",dateFilter, client, js))"><span class="icon iconify" data-icon="file-icons:microsoft-excel" />XLSX</button>
                <button data-title="@localizer["pdf"]" class="btn" @onclick="@(() =>FileDownload.ExportAsync("Warehouses","pdf",dateFilter, client, js))"><span class="icon iconify" data-icon="bi:filetype-pdf" />PDF</button>
                <button data-title="@localizer["txt"]" class="btn" @onclick="@(() =>FileDownload.ExportAsync("Warehouses","txt",dateFilter, client, js))"><span class="icon iconify" data-icon="bi:filetype-txt" />TXT</button>
                <button data-title="@localizer["csv"]" class="btn" @onclick="@(() =>FileDownload.ExportAsync("Warehouses","csv",dateFilter, client, js))"><span class="icon iconify" data-icon="bi:filetype-csv" />CSV</button>
            </ul>
        }
    </li>

    <span class="file-upload-title" import-data-title="@localizer["File_input"]"><UploadFiles Page="warehouses" StateChanged="StateChanged" /></span>
    <input value="@searchString" @oninput="@SearchAsync" placeholder="@(searchString != "" ? searchString : localizer["Search"])" class="form-control inputs input_search" type="search" id="search-input" name="SearchString">

    <!--Date Filter-->
    <div class="date-filter" data-title="@localizer["date-filter-info"]">
        <div class="date-filter-icon-div d-inline-block"><span class="icon iconify date-filter-icon" data-icon="carbon:arrows-vertical" /></div>
        <Input class="form-control" style="border-bottom-right-radius:unset;border-bottom:unset;" type="datetime-local" value="@dateFilter?.StartDate.GetValueOrDefault().ToString("yyyy-MM-ddTHH:mm", CultureInfo.CurrentCulture)" @oninput="@((e)=>{DateStartInput(e);})">
        <Input class="form-control" style="border-top-right-radius:unset;border-top:unset;" type="datetime-local" value="@dateFilter?.EndDate.GetValueOrDefault().ToString("yyyy-MM-ddTHH:mm", CultureInfo.CurrentCulture)" @oninput="@((e)=>{DateEndInput(e);})">
    </div>

</div>
<br>

@if (FileDownload.DocumentError != null && FileDownload.DocumentError != "")
{
    <p class="error">@FileDownload.DocumentError</p>
}

@if (Warehouses == null)
{
    <text><p class="text">@localizer["Loading"]</p></text>
}
else if (Warehouses.Length == 0)
{
    <text><p class="text">@localizer["No_records"]</p></text>
}
else
{
    <div class="col-md-8 stretch-card mb-2 me-3">
        <div class="form-card mb-1 table-width">
            <div class="card-body mb-3">
                <div class="table-responsive fixed-table-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>#</th>
                                @if (showColumns[0])
                                {
                                    <th><button class="@(sortOrder=="Address" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Address"))">@localizer["Address"]</button></th>
                                }
                                @if (showColumns[1])
                                {
                                    <th><button class="@(sortOrder=="Owner" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Owner"))">@localizer["Owner"]</button></th>
                                }
                                @if (showColumns[2])
                                {
                                    <th><button>@localizer["Cargo_id"]</button></th>
                                }
                                @if (showColumns[3])
                                {
                                    <th class="last-col"><button class="@(sortOrder=="Date" ? (desc ? "arrow-down" : "arrow-up") : "arrow-no-sorting")" @onclick="@(() => Sorting("Date"))">@localizer["Date"]</button></th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            
                            @foreach (Warehouses item in Warehouses)
                            {

                                <tr @onclick="@((e) =>MouseHoverClass.MouseOnclick(item.Id.ToString()))" @onmouseover="@((e) =>MouseHoverClass.MouseOver(item.Id.ToString()))" @onmouseout="@((e) =>MouseHoverClass.MouseOut())"
                            class="@(MouseHoverClass.MouseOnHoverClass == item.Id.ToString() || MouseHoverClass.MouseOnclickClass == item.Id.ToString() ? "color-on-hover" :"")">
                                    <td>@item.Id</td>
                                  
                                    @if (showColumns[0])
                                    {
                                        <td>@item.Address</td>
                                    }
                                    @if (showColumns[1])
                                    {
                                        <td> @item.Owner </td>
                                    }
                                    @if (showColumns[2])
                                    {
                                        <td class="warehouse-ids">
                                            @if (Cargoes != null)
                                            {
                                            @foreach (var cargo in Cargoes)
                                            {
                                                @if(cargo.Warehouse_id==item.Id)
                                                {
                                                    <button class="no-button multiselect-list" @onclick="@(()=>GetById(cargo.Id,"cargo"))"> @(cargo.Warehouse_section != null ? (cargo.Id + "/" + cargo.Warehouse_section + " ") : cargo.Id + " ")</button>
                                                }                                      
                                            }
                                        }
                                        </td>
                                    }
                                    @if (showColumns[3])
                                    {
                                        <td class="last-col">@item.Date</td>
                                    }
                                    <td class="@(MouseHoverClass.MouseOnHoverClass == item.Id.ToString() || MouseHoverClass.MouseOnclickClass == item.Id.ToString() ? "show" :"not-show") ">
                                        <a class="btn  fixed" href="Warehouses/edit/@item.Id"> <span data-title="@localizer["Edit"]" class="oi oi-pencil" aria-hidden="true"></span></a>
                                        <button class="btn fixed2" @onclick="@(() => DeleteAsync(item.Id))"> <span data-title="@localizer["DeleteAsync"]" class="oi oi-trash" aria-hidden="true"></span></button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <Pagination CurrentPage="currentPage" PageSize="pageSize" DataRows="dataRows" MaxPage="maxPage" GetCurrentPage="GetCurrentPageAsync" />
            </div>
        </div>
    </div>

    <div class="hideandshow-cards">
        @if (settings)
        {
            <Settings OnSettingsClosed="SettingsClosed" OnInputChanged="InputChanged" OnSettingsChanged="SettingsChanged" showColumns="@showColumns" settings="@settings" pageSize="@pageSize" />
        }
        @if (IdForGetById != null)
        {
            <GetByIdComponent GetById="@IdForGetById.ToString()" GetByIdType="@GetByIdType" OnSetToNull="SetToNull" />
        }
    </div>
}