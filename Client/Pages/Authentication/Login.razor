@page "/login"
@layout MainLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@inject IStringLocalizer<Resource> localizer

<h1 class="h4 font-weight-normal login-title ">
    @localizer["Please_Login"]
</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">

    <DataAnnotationsValidator />

    <label for="inputUsername" class="input-only">@localizer["Username"]</label>
    <InputText id="inputUsername" class="form-control inputs" @bind-Value="loginRequest.UserName" autofocus placeholder="@localizer["Username"]" />
    <ValidationMessage For="@(() => loginRequest.UserName)" />

    <label for="inputPassword" class="input-only">@localizer["Password"]</label>
    <InputText type="password" id="inputPassword" class="form-control inputs" placeholder="@localizer["Password"]" @bind-Value="loginRequest.Password" />
    <ValidationMessage For="@(() => loginRequest.Password)" />

    <div class="form-check m-3">
        <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginRequest.RememberMe" />
        <label class="form-check-label" for="inputRememberMe">@localizer["Remember_me"]</label>
    </div>

    <button class="btn btn-sm btn-primary btn-block" type="submit">@localizer["Login"]</button>

    <label class="text-danger">@error</label>


</EditForm>

@code {
    LoginRequest loginRequest { get; set; } = new LoginRequest();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginRequest);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}