@page "/Register"
@layout MainLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@attribute [Authorize(Roles = "Admin")]

<div class="login-card col-lg-8 mb-5 mt-1" style="width:22rem;">
    <h1 class="h4 font-weight-bold login-title mb-3">
        @localizer["NewAccount"]
    </h1>

    <EditForm class="form-signin register" OnValidSubmit="OnSubmit" Model="registerRequest">   
    
        <DataAnnotationsValidator />

        <label for="inputUsername" class="input-only">@localizer["Username"]</label>
        <InputText id="inputUsername" class="form-control" autofocus @bind-Value="@registerRequest.UserName" />
        <ValidationMessage For="@(() => registerRequest.UserName)" />

        <label for="inputEmail" class="input-only">@localizer["Email"]</label>
        <InputText type="text" id="inputEmail" class="form-control" @bind-Value="@registerRequest.Email" />
        <ValidationMessage For="@(() => registerRequest.Email)" />


        <label for="inputPhoneNumber" class="input-only">@localizer["Phone_number"]</label>
        <InputText type="text" id="inputPhoneNumber" class="form-control" @bind-Value="@registerRequest.PhoneNumber" />
        <ValidationMessage For="@(() => registerRequest.PhoneNumber)" />

        <label for="inputPassword" class="input-only">@localizer["Password"]</label>
        <InputText type="password" id="inputPassword" class="form-control"  @bind-Value="@registerRequest.Password" />
        <ValidationMessage For="@(() => registerRequest.Password)" />

        <label for="inputPasswordConfirm" class="input-only">@localizer["PasswordConfirm"]</label>
        <InputText type="password" id="inputPasswordConfirm" class="form-control"  @bind-Value="@registerRequest.PasswordConfirm" />
        <ValidationMessage For="@(() => registerRequest.PasswordConfirm)" />

        <label for="inputRole" class="input-only">@localizer["Role"]</label>
        <div for="@registerRequest.Role" name="role" id="role" class="form-group custom-select role-select">
            <div class="form-control">@(registerRequest.Role != null && registerRequest.Role.ToString() != "" ? localizer[registerRequest.Role?.ToString()!] : localizer["Nothing"])</div>
            <div class="custom-select-options">
                @foreach (var value in roles)
                {
                    <div class="custom-select-option" @onclick='() => {registerRequest.Role = value;}'>
                        @localizer[value.ToString()]
                    </div>
                }
            </div>
        </div>

        <div class="row"><div class="col"><button type="submit" class="login-btn btn btn-primary btn-block mt-3">@localizer["Register"]</button></div></div>
        <label class="text-danger">@error</label>
    </EditForm>
</div>

@functions {

    RegisterRequest registerRequest { get; set; } = new RegisterRequest();
    private List<string> roles = new()
    {
        ("Admin"),
        ("User"),
        ("Driver"),
        ("Accountant"),
        ("Storageman")
    };
    string? error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("/Admin");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}