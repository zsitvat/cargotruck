@page "/register"
@layout MainLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@attribute [Authorize(Roles = "Admin")]
<h1 class="h2 font-weight-normal login-title">
    Register
</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerRequest">
    <DataAnnotationsValidator />

    <label for="inputUsername" class="input-only">@localizer["Username"]</label>
    <InputText id="inputUsername" class="form-control" autofocus @bind-Value="@registerRequest.UserName" />
    <ValidationMessage For="@(() => registerRequest.UserName)" />

    <label for="inputPassword" class="input-only">@localizer["Password"]</label>
    <InputText type="password" id="inputPassword" class="form-control"  @bind-Value="@registerRequest.Password" />
    <ValidationMessage For="@(() => registerRequest.Password)" />

    <label for="inputPasswordConfirm" class="input-only">@localizer["PasswordConfirm"]</label>
    <InputText type="password" id="inputPasswordConfirm" class="form-control"  @bind-Value="@registerRequest.PasswordConfirm" />
    <ValidationMessage For="@(() => registerRequest.PasswordConfirm)" />

    <label for="inputRole" class="input-only">@localizer["Role"]</label>
    <select for="inputRole" class="form-control" name="role" id="role" @bind="@registerRequest.Role">
        <option value="User">@localizer["User"]</option>
        <option value="Admin">@localizer["Admin"]</option>
        <option value="Driver">@localizer["Driver"]</option>
        <option value="Manager">@localizer["Manager"]</option>
        <option value="Storageman">@localizer["Storageman"]</option>
    </select>

    <button class="btn btn-sm btn-primary btn-block" type="submit">@localizer["Register"]</button>

    <label class="text-danger">@error</label>
</EditForm>

@functions {

    RegisterRequest registerRequest { get; set; } = new RegisterRequest();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}